##定义LOG输出级别
log4j.rootLogger=INFO,stdout,File
#### stdout ###
###定义日志输出目的地为控制台
log4j.appender.stdout=org.apache.log4j.ConsoleAppender
log4j.appender.stdout.Target=System.out
log4j.appender.stdout.layout=org.apache.log4j.PatternLayout
log4j.appender.stdout.layout.ConversionPattern=[%d{yyyy-MM-dd HH:mm:ss}] %p %l : %m%n

##文件大小到达指定尺寸的时候产生一个新的文件
log4j.appender.File = org.apache.log4j.RollingFileAppender
##指定输出目录
#log4j.appender.File.File =${catalina.base}/espay_bot_logs/espay_bot.log
log4j.appender.File.File =/logs/espay_bot.log
## 输出所以日志，如果换成DEBUG表示输出DEBUG以上级别日志
log4j.appender.File.Threshold=INFO
log4j.appender.File.Append=true
###可以灵活地指定日志输出格式，下面一行是指定具体的格式
log4j.appender.File.layout = org.apache.log4j.PatternLayout
log4j.appender.File.layout.ConversionPattern =[%p] [%d{yyyy-MM-dd HH\:mm\:ss}][%c]%m%n
##定义文件最大大小
log4j.appender.File.MaxFileSize = 10MB

# ConversionPattern参数的格式含义
# 格式名 含义
# %c 输出日志信息所属的类的全名
# %d 输出日志时间点的日期或时间，默认格式为ISO8601，也可以在其后指定格式，比如：%d{yyy-MM-dd HH:mm:ss }，输出类似：2002-10-18- 22：10：28
# %f 输出日志信息所属的类的类名
# %l 输出日志事件的发生位置，即输出日志信息的语句处于它所在的类的第几行
# %m 输出代码中指定的信息，如log(message)中的message
# %n 输出一个回车换行符，Windows平台为“rn”，Unix平台为“n”
# %p 输出优先级，即DEBUG，INFO，WARN，ERROR，FATAL。如果是调用debug()输出的，则为DEBUG，依此类推
# %r 输出自应用启动到输出该日志信息所耗费的毫秒数
# %t 输出产生该日志事件的线程名


